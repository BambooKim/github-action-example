name: Deploy

on:
  push:
    branches: [ main ]    # main 브랜치에 push 시 실행

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: bamboo-action-prac
  CODE_DEPLOY_APPLICATION_NAME: github-action-prac
  CODE_DEPLOY_GROUP_NAME: github-action-prac-group

jobs:
  build_deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

        # JDK Setup
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

        # Gradle Wrapper 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

        # Gradle을 통해 프로젝트를 빌드한다
      - name: Build Project
        run: ./gradlew clean build -x test

        # 하위 디렉토리 생성
      - name: Make Directory
        run: mkdir deploy

        # JAR 파일 복사
      - name: Copy Jar File
        run: cp ./build/libs/*.jar ./deploy/

        # JAR 디렉토리 -> ZIP
      - name: Zip Directory
        run: zip -r -qq -j ./spring-project.zip ./deploy

        # AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

        # S3 Bucket으로 업로드
      - name: Upload Zip File to S3 Bucket
        run: |
          aws s3 cp \
          --region ${{ env.AWS_REGION }} \
          --acl private \
          ./spring-project.zip s3://${{ env.S3_BUCKET_NAME }}/
          

        # Deploy
      - name: Deploy
        run: |
          aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=spring-project.zip \